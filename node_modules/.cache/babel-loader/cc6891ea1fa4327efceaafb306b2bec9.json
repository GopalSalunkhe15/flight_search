{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gopal.salunkhe/Desktop/flights_search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\nimport airplane from \"./images/airplane.jpg\";\n\nfunction App() {\n  _s();\n\n  let customJson = require(\"./json/flight.json\");\n\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [optionDom, setOptionDom] = useState([]);\n  const [departDate, setDepartDate] = useState();\n  const [returnDate, setReturnDate] = useState();\n  const [selectType, setSelectType] = useState(\"oneWay\");\n  const [filterPrice, setFilterPrice] = useState(50000);\n\n  const getDistance = (originCitylatitude, originCitylongitude, destinationCitylatitude, destinationCitylongitude) => {\n    let radOCL, radDCL, theta, radtheta, dist;\n\n    if (originCitylatitude == destinationCitylatitude && originCitylongitude == destinationCitylongitude) {\n      return 0;\n    } else {\n      radOCL = Math.PI * originCitylatitude / 180;\n      radDCL = Math.PI * destinationCitylatitude / 180;\n      theta = originCitylongitude - destinationCitylongitude;\n      radtheta = Math.PI * theta / 180;\n      dist = Math.sin(radOCL) * Math.sin(radDCL) + Math.cos(radOCL) * Math.cos(radDCL) * Math.cos(radtheta);\n\n      if (dist > 1) {\n        dist = 1;\n      }\n\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    let optionDom = [];\n    originCity != destinationCity ? Object.keys(customJson.flightProvider).map((value, index) => {\n      let flightPrice = Math.round(distance * customJson.flightProvider[value].ratePerKm);\n      let departTime = customJson.flightProvider[value].morningDepartTime;\n      let nightDepartTime = customJson.flightProvider[value].nightDepartTime;\n      let TotalMinute = distance / customJson.flightProvider[value].speedPerHour * 60;\n      let Hour = Math.floor(TotalMinute / 60);\n      let Minutes = TotalMinute % 60;\n      let arriveTime = `${Hour + departTime}:${Minutes.toFixed()}`;\n      let returnArrivedTime = `${Hour + nightDepartTime}:${Minutes.toFixed()}`;\n\n      if (flightPrice < filterPrice) {\n        optionDom.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flight-provider\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \" \", \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price-container\",\n            children: [\"RS.\", \" \", Math.round(distance * customJson.flightProvider[value].ratePerKm), \".00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-detail\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [originCity, \" > \", destinationCity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Distance:- \", Math.round(distance), \" Km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"AL-202\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Depart:- \", departTime, \" Am\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Arrive:- \", arriveTime, Hour + departTime > 12 ? \"PM\" : \"AM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), selectType == \"Return\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Return-detail\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [destinationCity, \" > \", originCity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Distance:- \", Math.round(distance), \" Km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"AL-203\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Depart:- \", nightDepartTime, \" PM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Arrive:- \", returnArrivedTime, Hour + nightDepartTime > 12 ? \"PM\" : \"AM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo\",\n              src: airplane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => alert(\"flight booked\"),\n              children: \"Book This flight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this));\n      }\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n    setOptionDom(optionDom);\n  };\n\n  const submit = () => {\n    if (originCity && destinationCity && departDate) {\n      let originCitylatitude = customJson.city[originCity].latitude,\n          originCitylongitude = customJson.city[originCity].longitude,\n          destinationCitylatitude = customJson.city[destinationCity].latitude,\n          destinationCitylongitude = customJson.city[destinationCity].longitude;\n      let distance = getDistance(originCitylatitude, originCitylongitude, destinationCitylatitude, destinationCitylongitude);\n      getOptionBody(distance);\n    } else {\n      alert(\"please provide valid input.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectType(\"One Way\"),\n        children: \"One Way\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectType(\"Return\"),\n        children: \"Return\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: /*#__PURE__*/_jsxDEV(InputTag, {\n            placeholder: \"enter origin city\",\n            value: originCity,\n            onChange: e => setOriginCity(e.target.value.toLowerCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: /*#__PURE__*/_jsxDEV(InputTag, {\n            placeholder: \"enter destination city\",\n            value: destinationCity,\n            onChange: e => setDestinationCity(e.target.value.toLowerCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onFocus: e => e.target.type = \"date\",\n            placeholder: \"depature date\",\n            onChange: e => setDepartDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), selectType == \"Return\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onFocus: e => e.target.type = \"date\",\n            placeholder: \"return date \",\n            onChange: e => setReturnDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"passengers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submit,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-price\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showPrice\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lowPrice\",\n            children: \"10000 Rs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"maxPrice\",\n            children: [\" \", filterPrice, \" Rs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10000\",\n          max: \"50000\",\n          className: \"range-slider\",\n          value: filterPrice,\n          onChange: e => setFilterPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), optionDom && optionDom.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", originCity, \" > \", destinationCity, \" \", selectType == \"Return\" && `> ${originCity}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dates\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Depart: \", departDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), returnDate && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Return: \", returnDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-dom\",\n        children: optionDom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fEKWtjSivGHMScbhGs/WwUBPI+c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/flights_search/src/App.js"],"names":["Header","InputTag","useState","airplane","App","customJson","require","originCity","setOriginCity","destinationCity","setDestinationCity","optionDom","setOptionDom","departDate","setDepartDate","returnDate","setReturnDate","selectType","setSelectType","filterPrice","setFilterPrice","getDistance","originCitylatitude","originCitylongitude","destinationCitylatitude","destinationCitylongitude","radOCL","radDCL","theta","radtheta","dist","Math","PI","sin","cos","acos","getOptionBody","distance","Object","keys","flightProvider","map","value","index","flightPrice","round","ratePerKm","departTime","morningDepartTime","nightDepartTime","TotalMinute","speedPerHour","Hour","floor","Minutes","arriveTime","toFixed","returnArrivedTime","push","alert","submit","city","latitude","longitude","e","target","toLowerCase","type","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\nimport airplane from \"./images/airplane.jpg\";\nfunction App() {\n  let customJson = require(\"./json/flight.json\");\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [optionDom, setOptionDom] = useState([]);\n  const [departDate, setDepartDate] = useState();\n  const [returnDate, setReturnDate] = useState();\n  const [selectType, setSelectType] = useState(\"oneWay\");\n  const [filterPrice, setFilterPrice] = useState(50000);\n\n  const getDistance = (\n    originCitylatitude,\n    originCitylongitude,\n    destinationCitylatitude,\n    destinationCitylongitude\n  ) => {\n    let radOCL, radDCL, theta, radtheta, dist;\n    if (\n      originCitylatitude == destinationCitylatitude &&\n      originCitylongitude == destinationCitylongitude\n    ) {\n      return 0;\n    } else {\n      radOCL = (Math.PI * originCitylatitude) / 180;\n      radDCL = (Math.PI * destinationCitylatitude) / 180;\n      theta = originCitylongitude - destinationCitylongitude;\n      radtheta = (Math.PI * theta) / 180;\n      dist =\n        Math.sin(radOCL) * Math.sin(radDCL) +\n        Math.cos(radOCL) * Math.cos(radDCL) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = (dist * 180) / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    let optionDom = [];\n    originCity != destinationCity ? (\n      Object.keys(customJson.flightProvider).map((value, index) => {\n        let flightPrice = Math.round(\n          distance * customJson.flightProvider[value].ratePerKm\n        );\n        let departTime = customJson.flightProvider[value].morningDepartTime;\n        let nightDepartTime = customJson.flightProvider[value].nightDepartTime;\n        let TotalMinute =\n          (distance / customJson.flightProvider[value].speedPerHour) * 60;\n        let Hour = Math.floor(TotalMinute / 60);\n        let Minutes = TotalMinute % 60;\n        let arriveTime = `${Hour + departTime}:${Minutes.toFixed()}`;\n        let returnArrivedTime = `${Hour +\n          nightDepartTime}:${Minutes.toFixed()}`;\n        if (flightPrice < filterPrice) {\n          optionDom.push(\n            <div className=\"option-container\">\n              <span className=\"flight-provider\">{value}</span> {\"  \"}\n              <span className=\"price-container\">\n                RS.{\" \"}\n                {Math.round(\n                  distance * customJson.flightProvider[value].ratePerKm\n                )}\n                .00\n              </span>\n              <div className=\"option-detail\">\n                <div>\n                  {originCity} > {destinationCity}\n                </div>\n                <div>Distance:- {Math.round(distance)} Km</div>\n                <div>AL-202</div>\n                <div>Depart:- {departTime} Am</div>\n                <div>\n                  Arrive:- {arriveTime}\n                  {Hour + departTime > 12 ? \"PM\" : \"AM\"}\n                </div>\n              </div>\n              {selectType == \"Return\" && (\n                <div className=\"Return-detail\">\n                  <div>\n                    {destinationCity} > {originCity}\n                  </div>\n                  <div>Distance:- {Math.round(distance)} Km</div>\n                  <div>AL-203</div>\n                  <div>Depart:- {nightDepartTime} PM</div>\n                  <div>\n                    Arrive:- {returnArrivedTime}\n                    {Hour + nightDepartTime > 12 ? \"PM\" : \"AM\"}\n                  </div>\n                </div>\n              )}\n              <div className=\"flight-image-container\">\n                <img className=\"logo\" src={airplane} />\n                <button onClick={() => alert(\"flight booked\")}>\n                  Book This flight\n                </button>\n              </div>\n            </div>\n          );\n        }\n      })\n    ) : (\n      <div>No flight available</div>\n    );\n    setOptionDom(optionDom);\n  };\n  const submit = () => {\n    if (originCity && destinationCity && departDate) {\n      let originCitylatitude = customJson.city[originCity].latitude,\n        originCitylongitude = customJson.city[originCity].longitude,\n        destinationCitylatitude = customJson.city[destinationCity].latitude,\n        destinationCitylongitude = customJson.city[destinationCity].longitude;\n\n      let distance = getDistance(\n        originCitylatitude,\n        originCitylongitude,\n        destinationCitylatitude,\n        destinationCitylongitude\n      );\n      getOptionBody(distance);\n    } else {\n      alert(\"please provide valid input.\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div>\n        <Header />\n      </div>\n      <div className=\"tabs\">\n        <button onClick={() => setSelectType(\"One Way\")}>One Way</button>\n        <button onClick={() => setSelectType(\"Return\")}>Return</button>\n      </div>\n      <div>\n        <div className=\"form-detail\">\n          <div className=\"form-inputs\">\n            <InputTag\n              placeholder=\"enter origin city\"\n              value={originCity}\n              onChange={e => setOriginCity(e.target.value.toLowerCase())}\n            />\n          </div>\n          <div className=\"form-inputs\">\n            <InputTag\n              placeholder=\"enter destination city\"\n              value={destinationCity}\n              onChange={e => setDestinationCity(e.target.value.toLowerCase())}\n            />\n          </div>\n          <div className=\"form-inputs\">\n            <input\n              type=\"text\"\n              onFocus={e => (e.target.type = \"date\")}\n              placeholder=\"depature date\"\n              onChange={e => setDepartDate(e.target.value)}\n            />\n          </div>\n          {selectType == \"Return\" && (\n            <div className=\"form-inputs\">\n              <input\n                type=\"text\"\n                onFocus={e => (e.target.type = \"date\")}\n                placeholder=\"return date \"\n                onChange={e => setReturnDate(e.target.value)}\n              />\n            </div>\n          )}\n          <div className=\"form-inputs\">\n            {\" \"}\n            <input type=\"number\" placeholder=\"passengers\" />\n          </div>\n\n          <div className=\"form-inputs\">\n            <button onClick={submit}>submit</button>\n          </div>\n        </div>\n        <div className=\"filter-price\">\n          <div className=\"showPrice\">\n            <span className=\"lowPrice\">10000 Rs</span>\n            <span className=\"maxPrice\"> {filterPrice} Rs</span>\n          </div>\n\n          <input\n            type=\"range\"\n            min=\"10000\"\n            max=\"50000\"\n            className=\"range-slider\"\n            value={filterPrice}\n            onChange={e => setFilterPrice(e.target.value)}\n          />\n        </div>\n        {optionDom && optionDom.length ? (\n          <div className=\"details-date\">\n            <span>\n              {\" \"}\n              {originCity} > {destinationCity}{\" \"}\n              {selectType == \"Return\" && `> ${originCity}`}\n            </span>\n            <span className=\"dates\">\n              <div>Depart: {departDate}</div>\n              {returnDate && <div>Return: {returnDate}</div>}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"option-dom\">{optionDom}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}