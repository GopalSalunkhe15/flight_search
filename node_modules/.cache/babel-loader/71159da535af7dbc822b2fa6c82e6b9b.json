{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gopal.salunkhe/Desktop/flights_search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport Tab from \"./component/tab\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\nimport airplane from \"./images/airplane.jpg\";\n\nfunction App() {\n  _s();\n\n  debugger;\n\n  let customJson = require(\"./json/flight.json\");\n\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [isSubmitInProgress, setIsSubmitInProgress] = useState(false);\n  const [optionDom, setOptionDom] = useState([]);\n  const [departDate, setDepartDate] = useState(new Date());\n  const [returnDate, setReturnDate] = useState(new Date());\n\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    if (lat1 == lat2 && lon1 == lon2) {\n      return 0;\n    } else {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n      if (dist > 1) {\n        dist = 1;\n      }\n\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    debugger;\n    let optionDom = [];\n    originCity != destinationCity ? Object.keys(customJson.flightProvider).map((value, index) => {\n      optionDom.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flight-provider\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [originCity, \" > \", destinationCity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-container\",\n            children: [\"RS.\", \" \", Math.round(distance * customJson.flightProvider[value].ratePerKm)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Distance:- \", Math.round(distance), \" Km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"AL-202\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Depart: 8Am\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Arrive:12.00Am\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flight-image-container\",\n          src: airplane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this));\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flight available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n    setOptionDom(optionDom);\n  };\n\n  const submit = () => {\n    debugger;\n    setIsSubmitInProgress(true);\n    let originCitylatitude = customJson.city[originCity].latitude,\n        originCitylongitude = customJson.city[originCity].longitude,\n        destinationCitylatitude = customJson.city[destinationCity].latitude,\n        destinationCitylongitude = customJson.city[destinationCity].longitude;\n    let distance = getDistance(originCitylatitude, originCitylongitude, destinationCitylatitude, destinationCitylongitude);\n    getOptionBody(distance);\n  };\n\n  const name = e => {\n    debugger;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-detail\",\n        children: [/*#__PURE__*/_jsxDEV(InputTag, {\n          value: originCity,\n          onChange: e => setOriginCity(e.target.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputTag, {\n          value: destinationCity,\n          onChange: e => setDestinationCity(e.target.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setDepartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          onChange: e => setReturnDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: departDate.toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: returnDate.toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), optionDom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+CRTXMSjZcR1zOgpB6chPbdvSx0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/flights_search/src/App.js"],"names":["Header","Tab","InputTag","useState","airplane","App","customJson","require","originCity","setOriginCity","destinationCity","setDestinationCity","isSubmitInProgress","setIsSubmitInProgress","optionDom","setOptionDom","departDate","setDepartDate","Date","returnDate","setReturnDate","getDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","getOptionBody","distance","Object","keys","flightProvider","map","value","index","push","round","ratePerKm","submit","originCitylatitude","city","latitude","originCitylongitude","longitude","destinationCitylatitude","destinationCitylongitude","name","e","target","toLowerCase","toLocaleDateString"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport Tab from \"./component/tab\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\nimport airplane from \"./images/airplane.jpg\";\nfunction App() {\n  debugger;\n  let customJson = require(\"./json/flight.json\");\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [isSubmitInProgress, setIsSubmitInProgress] = useState(false);\n  const [optionDom, setOptionDom] = useState([]);\n  const [departDate, setDepartDate] =  useState(new Date());\n  const [returnDate, setReturnDate] =  useState(new Date());\n\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    if (lat1 == lat2 && lon1 == lon2) {\n      return 0;\n    } else {\n      var radlat1 = (Math.PI * lat1) / 180;\n      var radlat2 = (Math.PI * lat2) / 180;\n      var theta = lon1 - lon2;\n      var radtheta = (Math.PI * theta) / 180;\n      var dist =\n        Math.sin(radlat1) * Math.sin(radlat2) +\n        Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = (dist * 180) / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    debugger;\n    let optionDom = [];\n    originCity != destinationCity ? (\n      Object.keys(customJson.flightProvider).map((value, index) => {\n        optionDom.push(\n          <div className=\"option-container\">\n            <div className=\"option-detail\">\n              <div className=\"flight-provider\">{value}</div>\n              <div>\n                {originCity} > {destinationCity}\n              </div>\n              <div className=\"price-container\">\n                RS.{\" \"}\n                {Math.round(\n                  distance * customJson.flightProvider[value].ratePerKm\n                )}\n              </div>\n              <div>Distance:- {Math.round(distance)} Km</div>\n              <div>AL-202</div>\n              <div>Depart: 8Am</div>\n              <div>Arrive:12.00Am</div>\n            </div>\n            <img className=\"flight-image-container\" src={airplane} />\n          </div>\n        );\n      })\n    ) : (\n      <div>No flight available</div>\n    );\n    setOptionDom(optionDom);\n  };\n  const submit = () => {\n    debugger;\n    setIsSubmitInProgress(true);\n    let originCitylatitude = customJson.city[originCity].latitude,\n      originCitylongitude = customJson.city[originCity].longitude,\n      destinationCitylatitude = customJson.city[destinationCity].latitude,\n      destinationCitylongitude = customJson.city[destinationCity].longitude;\n\n    let distance = getDistance(\n      originCitylatitude,\n      originCitylongitude,\n      destinationCitylatitude,\n      destinationCitylongitude\n    );\n    getOptionBody(distance);\n  };\n  const name = (e) =>{\n    debugger;\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <Header />\n      </div>\n      <div>\n        <Tab />\n      </div>\n      <div>\n        <div className=\"form-detail\">\n          <InputTag\n            value={originCity}\n            onChange={e => setOriginCity(e.target.value.toLowerCase())}\n          />\n          <InputTag\n            value={destinationCity}\n            onChange={e => setDestinationCity(e.target.value.toLowerCase())}\n          />\n          <input type = \"date\" onChange = {(e) => setDepartDate(e.target.value)}/>\n          <input type = \"date\" onChange = {(e) => setReturnDate(e.target.value)}/>\n          <button onClick={submit}>submit</button>\n        </div>\n        <div>\n          <span>{departDate.toLocaleDateString()}</span>\n          <span>{returnDate.toLocaleDateString()}</span>\n        </div>\n        {optionDom}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}