{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gopal.salunkhe/Desktop/flights_search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport Tab from \"./component/tab\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\n\nfunction App() {\n  _s();\n\n  debugger;\n\n  let customJson = require(\"./json/flight.json\");\n\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [isSubmitInProgress, setIsSubmitInProgress] = useState(false);\n  const [optionDom, setOptionDom] = useState([]);\n\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    if (lat1 == lat2 && lon1 == lon2) {\n      return 0;\n    } else {\n      var radlat1 = Math.PI * lat1 / 180;\n      var radlat2 = Math.PI * lat2 / 180;\n      var theta = lon1 - lon2;\n      var radtheta = Math.PI * theta / 180;\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n      if (dist > 1) {\n        dist = 1;\n      }\n\n      dist = Math.acos(dist);\n      dist = dist * 180 / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    debugger;\n    let optionDom = [];\n    Object.keys(customJson.flightProvider).map((value, index) => {\n      optionDom.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: distance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: distance * customJson.flightProvider[value].ratePerKm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this));\n    });\n    setOptionDom(optionDom);\n  };\n\n  const submit = () => {\n    debugger;\n    setIsSubmitInProgress(true);\n    let originCitylatitude = customJson.city[originCity].latitude,\n        originCitylongitude = customJson.city[originCity].longitude,\n        destinationCitylatitude = customJson.city[destinationCity].latitude,\n        destinationCitylongitude = customJson.city[destinationCity].longitude;\n    let distance = getDistance(originCitylatitude, originCitylongitude, destinationCitylatitude, destinationCitylongitude);\n    getOptionBody(distance);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputTag, {\n      value: originCity,\n      onChange: e => setOriginCity(e.target.value.toLowerCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputTag, {\n      value: destinationCity,\n      onChange: e => setDestinationCity(e.target.value.toLowerCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), optionDom]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qs0Ysg4t6LlOZh3gcN7rWxZ1nNw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gopal.salunkhe/Desktop/flights_search/src/App.js"],"names":["Header","Tab","InputTag","useState","App","customJson","require","originCity","setOriginCity","destinationCity","setDestinationCity","isSubmitInProgress","setIsSubmitInProgress","optionDom","setOptionDom","getDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","getOptionBody","distance","Object","keys","flightProvider","map","value","index","push","ratePerKm","submit","originCitylatitude","city","latitude","originCitylongitude","longitude","destinationCitylatitude","destinationCitylongitude","e","target","toLowerCase"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Header from \"./component/fixedHeader\";\nimport Tab from \"./component/tab\";\nimport InputTag from \"./component/inputTag\";\nimport { useState } from \"react\";\nfunction App() {\n  debugger;\n  let customJson = require(\"./json/flight.json\");\n  const [originCity, setOriginCity] = useState(\"\");\n  const [destinationCity, setDestinationCity] = useState(\"\");\n  const [isSubmitInProgress, setIsSubmitInProgress] = useState(false);\n  const [optionDom, setOptionDom] = useState([]);\n\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    if (lat1 == lat2 && lon1 == lon2) {\n      return 0;\n    } else {\n      var radlat1 = (Math.PI * lat1) / 180;\n      var radlat2 = (Math.PI * lat2) / 180;\n      var theta = lon1 - lon2;\n      var radtheta = (Math.PI * theta) / 180;\n      var dist =\n        Math.sin(radlat1) * Math.sin(radlat2) +\n        Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n      if (dist > 1) {\n        dist = 1;\n      }\n      dist = Math.acos(dist);\n      dist = (dist * 180) / Math.PI;\n      dist = dist * 60 * 1.1515;\n      dist = dist * 1.609344;\n      return dist;\n    }\n  };\n\n  const getOptionBody = distance => {\n    debugger;\n    let optionDom = [];\n\n    Object.keys(customJson.flightProvider).map((value, index) => {\n      optionDom.push(\n        <div>\n          <div>{value}</div>\n          <div>{distance}</div>\n          <div>{distance * customJson.flightProvider[value].ratePerKm}</div>\n        </div>\n      );\n    });\n    setOptionDom(optionDom);\n  };\n  const submit = () => {\n    debugger;\n    setIsSubmitInProgress(true);\n    let originCitylatitude = customJson.city[originCity].latitude,\n      originCitylongitude = customJson.city[originCity].longitude,\n      destinationCitylatitude = customJson.city[destinationCity].latitude,\n      destinationCitylongitude = customJson.city[destinationCity].longitude;\n\n    let distance = getDistance(\n      originCitylatitude,\n      originCitylongitude,\n      destinationCitylatitude,\n      destinationCitylongitude\n    );\n    getOptionBody(distance);\n  };\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tab />\n      <InputTag\n        value={originCity}\n        onChange={e => setOriginCity(e.target.value.toLowerCase())}\n      />\n      <InputTag\n        value={destinationCity}\n        onChange={e => setDestinationCity(e.target.value.toLowerCase())}\n      />\n      <button onClick={submit}>submit</button>\n      {optionDom}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}